// Copyright Â© 2021 Obol Technologies Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: api/control_plane.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerConnectionState int32

const (
	PeerConnectionState_DISCONNECTED  PeerConnectionState = 0
	PeerConnectionState_CONNECTING    PeerConnectionState = 1
	PeerConnectionState_CONNECTED     PeerConnectionState = 2
	PeerConnectionState_DISCONNECTING PeerConnectionState = 3
)

// Enum value maps for PeerConnectionState.
var (
	PeerConnectionState_name = map[int32]string{
		0: "DISCONNECTED",
		1: "CONNECTING",
		2: "CONNECTED",
		3: "DISCONNECTING",
	}
	PeerConnectionState_value = map[string]int32{
		"DISCONNECTED":  0,
		"CONNECTING":    1,
		"CONNECTED":     2,
		"DISCONNECTING": 3,
	}
)

func (x PeerConnectionState) Enum() *PeerConnectionState {
	p := new(PeerConnectionState)
	*p = x
	return p
}

func (x PeerConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_control_plane_proto_enumTypes[0].Descriptor()
}

func (PeerConnectionState) Type() protoreflect.EnumType {
	return &file_api_control_plane_proto_enumTypes[0]
}

func (x PeerConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerConnectionState.Descriptor instead.
func (PeerConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{0}
}

type PeerConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *Peer               `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	State    PeerConnectionState `protobuf:"varint,2,opt,name=state,proto3,enum=obol.v1.charon.PeerConnectionState" json:"state,omitempty"`
	Endpoint string              `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Incoming bool                `protobuf:"varint,4,opt,name=incoming,proto3" json:"incoming,omitempty"`
}

func (x *PeerConnection) Reset() {
	*x = PeerConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnection) ProtoMessage() {}

func (x *PeerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnection.ProtoReflect.Descriptor instead.
func (*PeerConnection) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{0}
}

func (x *PeerConnection) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PeerConnection) GetState() PeerConnectionState {
	if x != nil {
		return x.State
	}
	return PeerConnectionState_DISCONNECTED
}

func (x *PeerConnection) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *PeerConnection) GetIncoming() bool {
	if x != nil {
		return x.Incoming
	}
	return false
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId      string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	ConnectTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=connect_time,json=connectTime,proto3,oneof" json:"connect_time,omitempty"`
	Version     string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Enr         string                 `protobuf:"bytes,4,opt,name=enr,proto3" json:"enr,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{1}
}

func (x *Peer) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *Peer) GetConnectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectTime
	}
	return nil
}

func (x *Peer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Peer) GetEnr() string {
	if x != nil {
		return x.Enr
	}
	return ""
}

type GetPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *PeerConnectionState `protobuf:"varint,1,opt,name=state,proto3,enum=obol.v1.charon.PeerConnectionState,oneof" json:"state,omitempty"`
}

func (x *GetPeersRequest) Reset() {
	*x = GetPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRequest) ProtoMessage() {}

func (x *GetPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRequest.ProtoReflect.Descriptor instead.
func (*GetPeersRequest) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{2}
}

func (x *GetPeersRequest) GetState() PeerConnectionState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return PeerConnectionState_DISCONNECTED
}

type GetPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*PeerConnection `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *GetPeersResponse) Reset() {
	*x = GetPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersResponse) ProtoMessage() {}

func (x *GetPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersResponse.ProtoReflect.Descriptor instead.
func (*GetPeersResponse) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{3}
}

func (x *GetPeersResponse) GetPeers() []*PeerConnection {
	if x != nil {
		return x.Peers
	}
	return nil
}

type GetSelfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSelfRequest) Reset() {
	*x = GetSelfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfRequest) ProtoMessage() {}

func (x *GetSelfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfRequest.ProtoReflect.Descriptor instead.
func (*GetSelfRequest) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{4}
}

type GetSelfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      *Peer                  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	PeerCount uint32                 `protobuf:"varint,3,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
}

func (x *GetSelfResponse) Reset() {
	*x = GetSelfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_control_plane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfResponse) ProtoMessage() {}

func (x *GetSelfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_control_plane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfResponse.ProtoReflect.Descriptor instead.
func (*GetSelfResponse) Descriptor() ([]byte, []int) {
	return file_api_control_plane_proto_rawDescGZIP(), []int{5}
}

func (x *GetSelfResponse) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *GetSelfResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetSelfResponse) GetPeerCount() uint32 {
	if x != nil {
		return x.PeerCount
	}
	return 0
}

var File_api_control_plane_proto protoreflect.FileDescriptor

var file_api_control_plane_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x62, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xa0, 0x01, 0x0a, 0x04, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x62,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x59, 0x0a, 0x13,
	0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x32, 0xd6, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x60, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6c, 0x66, 0x12, 0x1e, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x64, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x62, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x62, 0x6f, 0x6c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_control_plane_proto_rawDescOnce sync.Once
	file_api_control_plane_proto_rawDescData = file_api_control_plane_proto_rawDesc
)

func file_api_control_plane_proto_rawDescGZIP() []byte {
	file_api_control_plane_proto_rawDescOnce.Do(func() {
		file_api_control_plane_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_control_plane_proto_rawDescData)
	})
	return file_api_control_plane_proto_rawDescData
}

var file_api_control_plane_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_control_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_control_plane_proto_goTypes = []interface{}{
	(PeerConnectionState)(0),      // 0: obol.v1.charon.PeerConnectionState
	(*PeerConnection)(nil),        // 1: obol.v1.charon.PeerConnection
	(*Peer)(nil),                  // 2: obol.v1.charon.Peer
	(*GetPeersRequest)(nil),       // 3: obol.v1.charon.GetPeersRequest
	(*GetPeersResponse)(nil),      // 4: obol.v1.charon.GetPeersResponse
	(*GetSelfRequest)(nil),        // 5: obol.v1.charon.GetSelfRequest
	(*GetSelfResponse)(nil),       // 6: obol.v1.charon.GetSelfResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_api_control_plane_proto_depIdxs = []int32{
	2, // 0: obol.v1.charon.PeerConnection.peer:type_name -> obol.v1.charon.Peer
	0, // 1: obol.v1.charon.PeerConnection.state:type_name -> obol.v1.charon.PeerConnectionState
	7, // 2: obol.v1.charon.Peer.connect_time:type_name -> google.protobuf.Timestamp
	0, // 3: obol.v1.charon.GetPeersRequest.state:type_name -> obol.v1.charon.PeerConnectionState
	1, // 4: obol.v1.charon.GetPeersResponse.peers:type_name -> obol.v1.charon.PeerConnection
	2, // 5: obol.v1.charon.GetSelfResponse.peer:type_name -> obol.v1.charon.Peer
	7, // 6: obol.v1.charon.GetSelfResponse.start_time:type_name -> google.protobuf.Timestamp
	5, // 7: obol.v1.charon.ControlPlane.GetSelf:input_type -> obol.v1.charon.GetSelfRequest
	3, // 8: obol.v1.charon.ControlPlane.GetPeers:input_type -> obol.v1.charon.GetPeersRequest
	6, // 9: obol.v1.charon.ControlPlane.GetSelf:output_type -> obol.v1.charon.GetSelfResponse
	4, // 10: obol.v1.charon.ControlPlane.GetPeers:output_type -> obol.v1.charon.GetPeersResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_api_control_plane_proto_init() }
func file_api_control_plane_proto_init() {
	if File_api_control_plane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_control_plane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_control_plane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_control_plane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_control_plane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_control_plane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_control_plane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_control_plane_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_api_control_plane_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_control_plane_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_control_plane_proto_goTypes,
		DependencyIndexes: file_api_control_plane_proto_depIdxs,
		EnumInfos:         file_api_control_plane_proto_enumTypes,
		MessageInfos:      file_api_control_plane_proto_msgTypes,
	}.Build()
	File_api_control_plane_proto = out.File
	file_api_control_plane_proto_rawDesc = nil
	file_api_control_plane_proto_goTypes = nil
	file_api_control_plane_proto_depIdxs = nil
}
