// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: core/corepb/v1/consensus.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QBFTMsg struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Type              int64                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Duty              *Duty                  `protobuf:"bytes,2,opt,name=duty,proto3" json:"duty,omitempty"`
	PeerIdx           int64                  `protobuf:"varint,3,opt,name=peer_idx,json=peerIdx,proto3" json:"peer_idx,omitempty"`
	Round             int64                  `protobuf:"varint,4,opt,name=round,proto3" json:"round,omitempty"`
	PreparedRound     int64                  `protobuf:"varint,6,opt,name=prepared_round,json=preparedRound,proto3" json:"prepared_round,omitempty"`
	Signature         []byte                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	ValueHash         []byte                 `protobuf:"bytes,11,opt,name=value_hash,json=valueHash,proto3" json:"value_hash,omitempty"`
	PreparedValueHash []byte                 `protobuf:"bytes,12,opt,name=prepared_value_hash,json=preparedValueHash,proto3" json:"prepared_value_hash,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QBFTMsg) Reset() {
	*x = QBFTMsg{}
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QBFTMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QBFTMsg) ProtoMessage() {}

func (x *QBFTMsg) ProtoReflect() protoreflect.Message {
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QBFTMsg.ProtoReflect.Descriptor instead.
func (*QBFTMsg) Descriptor() ([]byte, []int) {
	return file_core_corepb_v1_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *QBFTMsg) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QBFTMsg) GetDuty() *Duty {
	if x != nil {
		return x.Duty
	}
	return nil
}

func (x *QBFTMsg) GetPeerIdx() int64 {
	if x != nil {
		return x.PeerIdx
	}
	return 0
}

func (x *QBFTMsg) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *QBFTMsg) GetPreparedRound() int64 {
	if x != nil {
		return x.PreparedRound
	}
	return 0
}

func (x *QBFTMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *QBFTMsg) GetValueHash() []byte {
	if x != nil {
		return x.ValueHash
	}
	return nil
}

func (x *QBFTMsg) GetPreparedValueHash() []byte {
	if x != nil {
		return x.PreparedValueHash
	}
	return nil
}

type QBFTConsensusMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *QBFTMsg               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`                     // msg is the message that we send
	Justification []*QBFTMsg             `protobuf:"bytes,2,rep,name=justification,proto3" json:"justification,omitempty"` // justification is the justifications from others for the message
	Values        []*anypb.Any           `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`               // values of the hashes in the messages
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QBFTConsensusMsg) Reset() {
	*x = QBFTConsensusMsg{}
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QBFTConsensusMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QBFTConsensusMsg) ProtoMessage() {}

func (x *QBFTConsensusMsg) ProtoReflect() protoreflect.Message {
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QBFTConsensusMsg.ProtoReflect.Descriptor instead.
func (*QBFTConsensusMsg) Descriptor() ([]byte, []int) {
	return file_core_corepb_v1_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *QBFTConsensusMsg) GetMsg() *QBFTMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *QBFTConsensusMsg) GetJustification() []*QBFTMsg {
	if x != nil {
		return x.Justification
	}
	return nil
}

func (x *QBFTConsensusMsg) GetValues() []*anypb.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type SniffedConsensusMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Msg           *QBFTConsensusMsg      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"` // Other consensus protocol messages can be added here
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SniffedConsensusMsg) Reset() {
	*x = SniffedConsensusMsg{}
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SniffedConsensusMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SniffedConsensusMsg) ProtoMessage() {}

func (x *SniffedConsensusMsg) ProtoReflect() protoreflect.Message {
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SniffedConsensusMsg.ProtoReflect.Descriptor instead.
func (*SniffedConsensusMsg) Descriptor() ([]byte, []int) {
	return file_core_corepb_v1_consensus_proto_rawDescGZIP(), []int{2}
}

func (x *SniffedConsensusMsg) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SniffedConsensusMsg) GetMsg() *QBFTConsensusMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SniffedConsensusInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Nodes         int64                  `protobuf:"varint,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
	PeerIdx       int64                  `protobuf:"varint,3,opt,name=peer_idx,json=peerIdx,proto3" json:"peer_idx,omitempty"`
	Msgs          []*SniffedConsensusMsg `protobuf:"bytes,4,rep,name=msgs,proto3" json:"msgs,omitempty"`
	ProtocolId    string                 `protobuf:"bytes,5,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SniffedConsensusInstance) Reset() {
	*x = SniffedConsensusInstance{}
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SniffedConsensusInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SniffedConsensusInstance) ProtoMessage() {}

func (x *SniffedConsensusInstance) ProtoReflect() protoreflect.Message {
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SniffedConsensusInstance.ProtoReflect.Descriptor instead.
func (*SniffedConsensusInstance) Descriptor() ([]byte, []int) {
	return file_core_corepb_v1_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *SniffedConsensusInstance) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *SniffedConsensusInstance) GetNodes() int64 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

func (x *SniffedConsensusInstance) GetPeerIdx() int64 {
	if x != nil {
		return x.PeerIdx
	}
	return 0
}

func (x *SniffedConsensusInstance) GetMsgs() []*SniffedConsensusMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *SniffedConsensusInstance) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

type SniffedConsensusInstances struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Instances     []*SniffedConsensusInstance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	GitHash       string                      `protobuf:"bytes,2,opt,name=git_hash,json=gitHash,proto3" json:"git_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SniffedConsensusInstances) Reset() {
	*x = SniffedConsensusInstances{}
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SniffedConsensusInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SniffedConsensusInstances) ProtoMessage() {}

func (x *SniffedConsensusInstances) ProtoReflect() protoreflect.Message {
	mi := &file_core_corepb_v1_consensus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SniffedConsensusInstances.ProtoReflect.Descriptor instead.
func (*SniffedConsensusInstances) Descriptor() ([]byte, []int) {
	return file_core_corepb_v1_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *SniffedConsensusInstances) GetInstances() []*SniffedConsensusInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *SniffedConsensusInstances) GetGitHash() string {
	if x != nil {
		return x.GitHash
	}
	return ""
}

var File_core_corepb_v1_consensus_proto protoreflect.FileDescriptor

const file_core_corepb_v1_consensus_proto_rawDesc = "" +
	"\n" +
	"\x1ecore/corepb/v1/consensus.proto\x12\x0ecore.corepb.v1\x1a\x19core/corepb/v1/core.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa4\x02\n" +
	"\aQBFTMsg\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x03R\x04type\x12(\n" +
	"\x04duty\x18\x02 \x01(\v2\x14.core.corepb.v1.DutyR\x04duty\x12\x19\n" +
	"\bpeer_idx\x18\x03 \x01(\x03R\apeerIdx\x12\x14\n" +
	"\x05round\x18\x04 \x01(\x03R\x05round\x12%\n" +
	"\x0eprepared_round\x18\x06 \x01(\x03R\rpreparedRound\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\x12\x1d\n" +
	"\n" +
	"value_hash\x18\v \x01(\fR\tvalueHash\x12.\n" +
	"\x13prepared_value_hash\x18\f \x01(\fR\x11preparedValueHashJ\x04\b\x05\x10\x06J\x04\b\a\x10\bJ\x04\b\t\x10\n" +
	"J\x04\b\n" +
	"\x10\v\"\xaa\x01\n" +
	"\x10QBFTConsensusMsg\x12)\n" +
	"\x03msg\x18\x01 \x01(\v2\x17.core.corepb.v1.QBFTMsgR\x03msg\x12=\n" +
	"\rjustification\x18\x02 \x03(\v2\x17.core.corepb.v1.QBFTMsgR\rjustification\x12,\n" +
	"\x06values\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\x06values\"\x83\x01\n" +
	"\x13SniffedConsensusMsg\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x122\n" +
	"\x03msg\x18\x02 \x01(\v2 .core.corepb.v1.QBFTConsensusMsgR\x03msg\"\xe0\x01\n" +
	"\x18SniffedConsensusInstance\x129\n" +
	"\n" +
	"started_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12\x14\n" +
	"\x05nodes\x18\x02 \x01(\x03R\x05nodes\x12\x19\n" +
	"\bpeer_idx\x18\x03 \x01(\x03R\apeerIdx\x127\n" +
	"\x04msgs\x18\x04 \x03(\v2#.core.corepb.v1.SniffedConsensusMsgR\x04msgs\x12\x1f\n" +
	"\vprotocol_id\x18\x05 \x01(\tR\n" +
	"protocolId\"~\n" +
	"\x19SniffedConsensusInstances\x12F\n" +
	"\tinstances\x18\x01 \x03(\v2(.core.corepb.v1.SniffedConsensusInstanceR\tinstances\x12\x19\n" +
	"\bgit_hash\x18\x02 \x01(\tR\agitHashB.Z,github.com/obolnetwork/charon/core/corepb/v1b\x06proto3"

var (
	file_core_corepb_v1_consensus_proto_rawDescOnce sync.Once
	file_core_corepb_v1_consensus_proto_rawDescData []byte
)

func file_core_corepb_v1_consensus_proto_rawDescGZIP() []byte {
	file_core_corepb_v1_consensus_proto_rawDescOnce.Do(func() {
		file_core_corepb_v1_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_corepb_v1_consensus_proto_rawDesc), len(file_core_corepb_v1_consensus_proto_rawDesc)))
	})
	return file_core_corepb_v1_consensus_proto_rawDescData
}

var file_core_corepb_v1_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_core_corepb_v1_consensus_proto_goTypes = []any{
	(*QBFTMsg)(nil),                   // 0: core.corepb.v1.QBFTMsg
	(*QBFTConsensusMsg)(nil),          // 1: core.corepb.v1.QBFTConsensusMsg
	(*SniffedConsensusMsg)(nil),       // 2: core.corepb.v1.SniffedConsensusMsg
	(*SniffedConsensusInstance)(nil),  // 3: core.corepb.v1.SniffedConsensusInstance
	(*SniffedConsensusInstances)(nil), // 4: core.corepb.v1.SniffedConsensusInstances
	(*Duty)(nil),                      // 5: core.corepb.v1.Duty
	(*anypb.Any)(nil),                 // 6: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),     // 7: google.protobuf.Timestamp
}
var file_core_corepb_v1_consensus_proto_depIdxs = []int32{
	5, // 0: core.corepb.v1.QBFTMsg.duty:type_name -> core.corepb.v1.Duty
	0, // 1: core.corepb.v1.QBFTConsensusMsg.msg:type_name -> core.corepb.v1.QBFTMsg
	0, // 2: core.corepb.v1.QBFTConsensusMsg.justification:type_name -> core.corepb.v1.QBFTMsg
	6, // 3: core.corepb.v1.QBFTConsensusMsg.values:type_name -> google.protobuf.Any
	7, // 4: core.corepb.v1.SniffedConsensusMsg.timestamp:type_name -> google.protobuf.Timestamp
	1, // 5: core.corepb.v1.SniffedConsensusMsg.msg:type_name -> core.corepb.v1.QBFTConsensusMsg
	7, // 6: core.corepb.v1.SniffedConsensusInstance.started_at:type_name -> google.protobuf.Timestamp
	2, // 7: core.corepb.v1.SniffedConsensusInstance.msgs:type_name -> core.corepb.v1.SniffedConsensusMsg
	3, // 8: core.corepb.v1.SniffedConsensusInstances.instances:type_name -> core.corepb.v1.SniffedConsensusInstance
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_core_corepb_v1_consensus_proto_init() }
func file_core_corepb_v1_consensus_proto_init() {
	if File_core_corepb_v1_consensus_proto != nil {
		return
	}
	file_core_corepb_v1_core_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_corepb_v1_consensus_proto_rawDesc), len(file_core_corepb_v1_consensus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_corepb_v1_consensus_proto_goTypes,
		DependencyIndexes: file_core_corepb_v1_consensus_proto_depIdxs,
		MessageInfos:      file_core_corepb_v1_consensus_proto_msgTypes,
	}.Build()
	File_core_corepb_v1_consensus_proto = out.File
	file_core_corepb_v1_consensus_proto_goTypes = nil
	file_core_corepb_v1_consensus_proto_depIdxs = nil
}
