// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dkg/dkgpb/v1/pedersen.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodePubKeyMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     []byte                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // kyber.Point
	Shares        *NodePubKeyShares      `protobuf:"bytes,3,opt,name=shares,proto3,oneof" json:"shares,omitempty"`                  // for resharing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodePubKeyMessage) Reset() {
	*x = NodePubKeyMessage{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePubKeyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePubKeyMessage) ProtoMessage() {}

func (x *NodePubKeyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePubKeyMessage.ProtoReflect.Descriptor instead.
func (*NodePubKeyMessage) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{0}
}

func (x *NodePubKeyMessage) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *NodePubKeyMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *NodePubKeyMessage) GetShares() *NodePubKeyShares {
	if x != nil {
		return x.Shares
	}
	return nil
}

type NodePubKeyShares struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PublicKeyShares [][]byte               `protobuf:"bytes,1,rep,name=public_key_shares,json=publicKeyShares,proto3" json:"public_key_shares,omitempty"` // kyber.Point
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NodePubKeyShares) Reset() {
	*x = NodePubKeyShares{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePubKeyShares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePubKeyShares) ProtoMessage() {}

func (x *NodePubKeyShares) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePubKeyShares.ProtoReflect.Descriptor instead.
func (*NodePubKeyShares) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{1}
}

func (x *NodePubKeyShares) GetPublicKeyShares() [][]byte {
	if x != nil {
		return x.PublicKeyShares
	}
	return nil
}

type ValidatorPubKeyShareMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SessionId      []byte                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PublicKeyShare []byte                 `protobuf:"bytes,2,opt,name=public_key_share,json=publicKeyShare,proto3" json:"public_key_share,omitempty"` // kyber.Point
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidatorPubKeyShareMessage) Reset() {
	*x = ValidatorPubKeyShareMessage{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorPubKeyShareMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorPubKeyShareMessage) ProtoMessage() {}

func (x *ValidatorPubKeyShareMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorPubKeyShareMessage.ProtoReflect.Descriptor instead.
func (*ValidatorPubKeyShareMessage) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{2}
}

func (x *ValidatorPubKeyShareMessage) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *ValidatorPubKeyShareMessage) GetPublicKeyShare() []byte {
	if x != nil {
		return x.PublicKeyShare
	}
	return nil
}

type PedersenDealBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DealerIndex   uint32                 `protobuf:"varint,1,opt,name=dealer_index,json=dealerIndex,proto3" json:"dealer_index,omitempty"`
	Deals         []*PedersenDeal        `protobuf:"bytes,2,rep,name=deals,proto3" json:"deals,omitempty"`
	Public        [][]byte               `protobuf:"bytes,3,rep,name=public,proto3" json:"public,omitempty"` // kyber.Point
	SessionId     []byte                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedersenDealBundle) Reset() {
	*x = PedersenDealBundle{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenDealBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenDealBundle) ProtoMessage() {}

func (x *PedersenDealBundle) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenDealBundle.ProtoReflect.Descriptor instead.
func (*PedersenDealBundle) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{3}
}

func (x *PedersenDealBundle) GetDealerIndex() uint32 {
	if x != nil {
		return x.DealerIndex
	}
	return 0
}

func (x *PedersenDealBundle) GetDeals() []*PedersenDeal {
	if x != nil {
		return x.Deals
	}
	return nil
}

func (x *PedersenDealBundle) GetPublic() [][]byte {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *PedersenDealBundle) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *PedersenDealBundle) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PedersenDeal struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ShareIndex     uint32                 `protobuf:"varint,1,opt,name=share_index,json=shareIndex,proto3" json:"share_index,omitempty"`
	EncryptedShare []byte                 `protobuf:"bytes,2,opt,name=encrypted_share,json=encryptedShare,proto3" json:"encrypted_share,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PedersenDeal) Reset() {
	*x = PedersenDeal{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenDeal) ProtoMessage() {}

func (x *PedersenDeal) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenDeal.ProtoReflect.Descriptor instead.
func (*PedersenDeal) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{4}
}

func (x *PedersenDeal) GetShareIndex() uint32 {
	if x != nil {
		return x.ShareIndex
	}
	return 0
}

func (x *PedersenDeal) GetEncryptedShare() []byte {
	if x != nil {
		return x.EncryptedShare
	}
	return nil
}

type PedersenResponseBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareIndex    uint32                 `protobuf:"varint,1,opt,name=share_index,json=shareIndex,proto3" json:"share_index,omitempty"`
	Responses     []*PedersenResponse    `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
	SessionId     []byte                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Signature     []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedersenResponseBundle) Reset() {
	*x = PedersenResponseBundle{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenResponseBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenResponseBundle) ProtoMessage() {}

func (x *PedersenResponseBundle) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenResponseBundle.ProtoReflect.Descriptor instead.
func (*PedersenResponseBundle) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{5}
}

func (x *PedersenResponseBundle) GetShareIndex() uint32 {
	if x != nil {
		return x.ShareIndex
	}
	return 0
}

func (x *PedersenResponseBundle) GetResponses() []*PedersenResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *PedersenResponseBundle) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *PedersenResponseBundle) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PedersenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DealerIndex   uint32                 `protobuf:"varint,1,opt,name=dealer_index,json=dealerIndex,proto3" json:"dealer_index,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedersenResponse) Reset() {
	*x = PedersenResponse{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenResponse) ProtoMessage() {}

func (x *PedersenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenResponse.ProtoReflect.Descriptor instead.
func (*PedersenResponse) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{6}
}

func (x *PedersenResponse) GetDealerIndex() uint32 {
	if x != nil {
		return x.DealerIndex
	}
	return 0
}

func (x *PedersenResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PedersenJustificationBundle struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	DealerIndex    uint32                   `protobuf:"varint,1,opt,name=dealer_index,json=dealerIndex,proto3" json:"dealer_index,omitempty"`
	Justifications []*PedersenJustification `protobuf:"bytes,2,rep,name=justifications,proto3" json:"justifications,omitempty"`
	SessionId      []byte                   `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Signature      []byte                   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PedersenJustificationBundle) Reset() {
	*x = PedersenJustificationBundle{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenJustificationBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenJustificationBundle) ProtoMessage() {}

func (x *PedersenJustificationBundle) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenJustificationBundle.ProtoReflect.Descriptor instead.
func (*PedersenJustificationBundle) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{7}
}

func (x *PedersenJustificationBundle) GetDealerIndex() uint32 {
	if x != nil {
		return x.DealerIndex
	}
	return 0
}

func (x *PedersenJustificationBundle) GetJustifications() []*PedersenJustification {
	if x != nil {
		return x.Justifications
	}
	return nil
}

func (x *PedersenJustificationBundle) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *PedersenJustificationBundle) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PedersenJustification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareIndex    uint32                 `protobuf:"varint,1,opt,name=share_index,json=shareIndex,proto3" json:"share_index,omitempty"`
	Share         []byte                 `protobuf:"bytes,2,opt,name=share,proto3" json:"share,omitempty"` // kyber.Scalar
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedersenJustification) Reset() {
	*x = PedersenJustification{}
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenJustification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenJustification) ProtoMessage() {}

func (x *PedersenJustification) ProtoReflect() protoreflect.Message {
	mi := &file_dkg_dkgpb_v1_pedersen_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenJustification.ProtoReflect.Descriptor instead.
func (*PedersenJustification) Descriptor() ([]byte, []int) {
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP(), []int{8}
}

func (x *PedersenJustification) GetShareIndex() uint32 {
	if x != nil {
		return x.ShareIndex
	}
	return 0
}

func (x *PedersenJustification) GetShare() []byte {
	if x != nil {
		return x.Share
	}
	return nil
}

var File_dkg_dkgpb_v1_pedersen_proto protoreflect.FileDescriptor

const file_dkg_dkgpb_v1_pedersen_proto_rawDesc = "" +
	"\n" +
	"\x1bdkg/dkgpb/v1/pedersen.proto\x12\fdkg.dkgpb.v1\"\x99\x01\n" +
	"\x11NodePubKeyMessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\fR\tsessionId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\fR\tpublicKey\x12;\n" +
	"\x06shares\x18\x03 \x01(\v2\x1e.dkg.dkgpb.v1.NodePubKeySharesH\x00R\x06shares\x88\x01\x01B\t\n" +
	"\a_shares\">\n" +
	"\x10NodePubKeyShares\x12*\n" +
	"\x11public_key_shares\x18\x01 \x03(\fR\x0fpublicKeyShares\"f\n" +
	"\x1bValidatorPubKeyShareMessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\fR\tsessionId\x12(\n" +
	"\x10public_key_share\x18\x02 \x01(\fR\x0epublicKeyShare\"\xbe\x01\n" +
	"\x12PedersenDealBundle\x12!\n" +
	"\fdealer_index\x18\x01 \x01(\rR\vdealerIndex\x120\n" +
	"\x05deals\x18\x02 \x03(\v2\x1a.dkg.dkgpb.v1.PedersenDealR\x05deals\x12\x16\n" +
	"\x06public\x18\x03 \x03(\fR\x06public\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\fR\tsessionId\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"X\n" +
	"\fPedersenDeal\x12\x1f\n" +
	"\vshare_index\x18\x01 \x01(\rR\n" +
	"shareIndex\x12'\n" +
	"\x0fencrypted_share\x18\x02 \x01(\fR\x0eencryptedShare\"\xb4\x01\n" +
	"\x16PedersenResponseBundle\x12\x1f\n" +
	"\vshare_index\x18\x01 \x01(\rR\n" +
	"shareIndex\x12<\n" +
	"\tresponses\x18\x02 \x03(\v2\x1e.dkg.dkgpb.v1.PedersenResponseR\tresponses\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\fR\tsessionId\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"M\n" +
	"\x10PedersenResponse\x12!\n" +
	"\fdealer_index\x18\x01 \x01(\rR\vdealerIndex\x12\x16\n" +
	"\x06status\x18\x02 \x01(\bR\x06status\"\xca\x01\n" +
	"\x1bPedersenJustificationBundle\x12!\n" +
	"\fdealer_index\x18\x01 \x01(\rR\vdealerIndex\x12K\n" +
	"\x0ejustifications\x18\x02 \x03(\v2#.dkg.dkgpb.v1.PedersenJustificationR\x0ejustifications\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\fR\tsessionId\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"N\n" +
	"\x15PedersenJustification\x12\x1f\n" +
	"\vshare_index\x18\x01 \x01(\rR\n" +
	"shareIndex\x12\x14\n" +
	"\x05share\x18\x02 \x01(\fR\x05shareB,Z*github.com/obolnetwork/charon/dkg/dkgpb/v1b\x06proto3"

var (
	file_dkg_dkgpb_v1_pedersen_proto_rawDescOnce sync.Once
	file_dkg_dkgpb_v1_pedersen_proto_rawDescData []byte
)

func file_dkg_dkgpb_v1_pedersen_proto_rawDescGZIP() []byte {
	file_dkg_dkgpb_v1_pedersen_proto_rawDescOnce.Do(func() {
		file_dkg_dkgpb_v1_pedersen_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dkg_dkgpb_v1_pedersen_proto_rawDesc), len(file_dkg_dkgpb_v1_pedersen_proto_rawDesc)))
	})
	return file_dkg_dkgpb_v1_pedersen_proto_rawDescData
}

var file_dkg_dkgpb_v1_pedersen_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dkg_dkgpb_v1_pedersen_proto_goTypes = []any{
	(*NodePubKeyMessage)(nil),           // 0: dkg.dkgpb.v1.NodePubKeyMessage
	(*NodePubKeyShares)(nil),            // 1: dkg.dkgpb.v1.NodePubKeyShares
	(*ValidatorPubKeyShareMessage)(nil), // 2: dkg.dkgpb.v1.ValidatorPubKeyShareMessage
	(*PedersenDealBundle)(nil),          // 3: dkg.dkgpb.v1.PedersenDealBundle
	(*PedersenDeal)(nil),                // 4: dkg.dkgpb.v1.PedersenDeal
	(*PedersenResponseBundle)(nil),      // 5: dkg.dkgpb.v1.PedersenResponseBundle
	(*PedersenResponse)(nil),            // 6: dkg.dkgpb.v1.PedersenResponse
	(*PedersenJustificationBundle)(nil), // 7: dkg.dkgpb.v1.PedersenJustificationBundle
	(*PedersenJustification)(nil),       // 8: dkg.dkgpb.v1.PedersenJustification
}
var file_dkg_dkgpb_v1_pedersen_proto_depIdxs = []int32{
	1, // 0: dkg.dkgpb.v1.NodePubKeyMessage.shares:type_name -> dkg.dkgpb.v1.NodePubKeyShares
	4, // 1: dkg.dkgpb.v1.PedersenDealBundle.deals:type_name -> dkg.dkgpb.v1.PedersenDeal
	6, // 2: dkg.dkgpb.v1.PedersenResponseBundle.responses:type_name -> dkg.dkgpb.v1.PedersenResponse
	8, // 3: dkg.dkgpb.v1.PedersenJustificationBundle.justifications:type_name -> dkg.dkgpb.v1.PedersenJustification
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dkg_dkgpb_v1_pedersen_proto_init() }
func file_dkg_dkgpb_v1_pedersen_proto_init() {
	if File_dkg_dkgpb_v1_pedersen_proto != nil {
		return
	}
	file_dkg_dkgpb_v1_pedersen_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dkg_dkgpb_v1_pedersen_proto_rawDesc), len(file_dkg_dkgpb_v1_pedersen_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dkg_dkgpb_v1_pedersen_proto_goTypes,
		DependencyIndexes: file_dkg_dkgpb_v1_pedersen_proto_depIdxs,
		MessageInfos:      file_dkg_dkgpb_v1_pedersen_proto_msgTypes,
	}.Build()
	File_dkg_dkgpb_v1_pedersen_proto = out.File
	file_dkg_dkgpb_v1_pedersen_proto_goTypes = nil
	file_dkg_dkgpb_v1_pedersen_proto_depIdxs = nil
}
