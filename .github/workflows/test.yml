name: unit tests
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go test -coverprofile=coverage.out -covermode=atomic -timeout=5m ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out

  integration_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: docker pull consensys/teku:latest
      - run: go test -v -timeout=5m github.com/obolnetwork/charon/app -integration

  compose_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2 # For compose to build images
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          echo "CHARON_REPO=$(pwd)" >> $GITHUB_ENV
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
      - run: go test github.com/obolnetwork/charon/testutil/compose/smoke -v -integration -sudo-perms -timeout=20m -log-dir=.
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: smoke-test-logs
          path: testutil/compose/smoke/*.log
          retention-days: 3

  notify_failure:
    runs-on: ubuntu-latest
    needs: [ unit_tests, integration_tests, compose_tests ]
    # Syntax ref: https://github.com/actions/runner/issues/1251
    if: always() && github.ref == 'refs/heads/main' && contains(join(needs.*.result, ','), 'failure')
    steps:
      - name: notify failure
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: GitHub
          DISCORD_AVATAR: https://avatars.githubusercontent.com/u/583231
          DISCORD_EMBEDS: |
            [{
              "title": "ðŸš¨  Main branch workflow failed: ${{ github.workflow }}",
              "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "color": 10038562
            }]
